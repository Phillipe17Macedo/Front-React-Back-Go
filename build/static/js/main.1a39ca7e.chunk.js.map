{"version":3,"sources":["pages/professores.js","pages/turmas.js","pages/alunos.js","pages/atividades.js","pages/notas.js","App.js","reportWebVitals.js","index.js"],"names":["Professores","professores","setProfessores","useState","novoProfessor","setNovoProfessor","nome","email","cpf","errors","setErrors","editMode","setEditMode","editingProfessorId","setEditingProfessorId","useEffect","axios","get","then","response","data","catch","error","console","log","handleChange","e","target","name","value","validate","tempErrors","isValid","test","React","createElement","className","htmlFor","type","id","placeholder","onChange","required","maxLength","pattern","onClick","handleSave","put","map","prof","ID","preventDefault","post","professor","key","Nome","Email","CPF","find","handleEdit","handleDelete","window","confirm","delete","filter","Turmas","turmas","setTurmas","novaTurma","setNovaTurma","semestre","ano","professorID","editingTurmaId","setEditingTurmaId","validateForm","formErrors","Object","keys","length","handleSubmit","turmaData","parseInt","onSubmit","turma","_professores$find","Semestre","Ano","ProfessorID","t","toString","Alunos","alunos","setAlunos","novoAluno","setNovoAluno","matricula","editingAlunoId","setEditingAlunoId","noValidate","aluno","alert","Matricula","a","Atividades","atividades","setAtividades","novaAtividade","setNovaAtividade","valor","turmaID","editingAtividadeId","setEditingAtividadeId","isNaN","parseFloat","atividadeData","atividade","step","disabled","Valor","Date","Data","toLocaleDateString","Turma","formattedDate","toISOString","split","TurmaID","Notas","notas","setNotas","notaInput","setNotaInput","alunoID","atividadeID","selectedTurma","setSelectedTurma","errorMessage","setErrorMessage","editingNotaId","setEditingNotaId","role","push","join","nota","Aluno","Atividade","n","turmaRelacionada","AlunoID","AtividadeID","Home","style","borderColor","Link","to","App","Router","backgroundColor","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.1a39ca7e.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction Professores() {\r\n  const [professores, setProfessores] = useState([]);\r\n  const [novoProfessor, setNovoProfessor] = useState({\r\n    nome: \"\",\r\n    email: \"\",\r\n    cpf: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [editingProfessorId, setEditingProfessorId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"https://cadastro-escola-production.up.railway.app/professores\")\r\n      .then((response) => setProfessores(response.data))\r\n      .catch((error) => console.log(error));\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    setNovoProfessor({ ...novoProfessor, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const validate = () => {\r\n    let tempErrors = {};\r\n    let isValid = true;\r\n\r\n    if (!novoProfessor.nome) {\r\n      tempErrors[\"nome\"] = \"O nome é obrigatório.\";\r\n      isValid = false;\r\n    }\r\n    if (!novoProfessor.email) {\r\n      tempErrors[\"email\"] = \"O email é obrigatório.\";\r\n      isValid = false;\r\n    }\r\n\r\n    const cpfRegex = /^[0-9]{11}$/;\r\n    if (!novoProfessor.cpf) {\r\n      tempErrors[\"cpf\"] = \"O CPF é obrigatório.\";\r\n      isValid = false;\r\n    } else if (!cpfRegex.test(novoProfessor.cpf)) {\r\n      tempErrors[\"cpf\"] = \"O CPF deve conter 11 dígitos numéricos.\";\r\n      isValid = false;\r\n    }\r\n\r\n    setErrors(tempErrors);\r\n    return isValid;\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (validate()) {\r\n      axios\r\n        .post(\"https://cadastro-escola-production.up.railway.app/professores\", novoProfessor)\r\n        .then((response) => {\r\n          setProfessores([...professores, response.data]);\r\n          setNovoProfessor({ nome: \"\", email: \"\", cpf: \"\" });\r\n          setErrors({});\r\n        })\r\n        .catch((error) => console.log(error));\r\n    }\r\n  };\r\n\r\n  const handleSave = () => {\r\n    if (validate()) {\r\n      axios\r\n        .put(`https://cadastro-escola-production.up.railway.app/professores/${editingProfessorId}`, novoProfessor)\r\n        .then((response) => {\r\n          setProfessores(\r\n            professores.map((prof) =>\r\n              prof.ID === editingProfessorId ? response.data : prof\r\n            )\r\n          );\r\n          setNovoProfessor({ nome: \"\", email: \"\", cpf: \"\" });\r\n          setEditingProfessorId(null);\r\n          setEditMode(false);\r\n          setErrors({});\r\n        })\r\n        .catch((error) => console.log(error));\r\n    }\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    if (window.confirm(\"Você tem certeza que deseja remover este professor?\")) {\r\n      axios\r\n        .delete(`https://cadastro-escola-production.up.railway.app/professores/${id}`)\r\n        .then(() => {\r\n          setProfessores(\r\n            professores.filter((professor) => professor.ID !== id)\r\n          );\r\n        })\r\n        .catch((error) => console.log(error));\r\n    }\r\n  };\r\n\r\n  const handleEdit = (id) => {\r\n    const professor = professores.find((prof) => prof.ID === id);\r\n    setNovoProfessor({\r\n      nome: professor.Nome,\r\n      email: professor.Email,\r\n      cpf: professor.CPF,\r\n    });\r\n    setEditingProfessorId(id);\r\n    setEditMode(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"jumbotron bg-primary text-white p-5 rounded-lg shadow-sm mb-4\">\r\n        <h2 className=\"display-4\">Gerenciamento de Professores</h2>\r\n        <p className=\"lead\">\r\n          Cadastre novos professores e visualize a lista completa dos docentes.\r\n        </p>\r\n      </div>\r\n\r\n      <h3 className=\"mb-4\">\r\n        {editMode ? \"Editar Professor\" : \"Cadastrar Novo Professor\"}\r\n      </h3>\r\n      <form className=\"mb-4 p-4 bg-light rounded-lg shadow\">\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"nome\" className=\"form-label\">\r\n            Nome\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className={`form-control ${errors.nome ? \"is-invalid\" : \"\"}`}\r\n            name=\"nome\"\r\n            id=\"nome\"\r\n            placeholder=\"Nome\"\r\n            value={novoProfessor.nome}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n          {errors.nome && <div className=\"invalid-feedback\">{errors.nome}</div>}\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"email\" className=\"form-label\">\r\n            Email\r\n          </label>\r\n          <input\r\n            type=\"email\"\r\n            className={`form-control ${errors.email ? \"is-invalid\" : \"\"}`}\r\n            name=\"email\"\r\n            id=\"email\"\r\n            placeholder=\"Email\"\r\n            value={novoProfessor.email}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n          {errors.email && (\r\n            <div className=\"invalid-feedback\">{errors.email}</div>\r\n          )}\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"cpf\" className=\"form-label\">\r\n            CPF\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className={`form-control ${errors.cpf ? \"is-invalid\" : \"\"}`}\r\n            name=\"cpf\"\r\n            id=\"cpf\"\r\n            placeholder=\"CPF\"\r\n            value={novoProfessor.cpf}\r\n            onChange={handleChange}\r\n            required\r\n            maxLength=\"11\"\r\n            pattern=\"[0-9]*\"\r\n          />\r\n          {errors.cpf && <div className=\"invalid-feedback\">{errors.cpf}</div>}\r\n        </div>\r\n        <button\r\n          type=\"button\"\r\n          className={`btn ${editMode ? \"btn-warning\" : \"btn-success\"} w-100`}\r\n          onClick={editMode ? handleSave : handleSubmit}\r\n        >\r\n          {editMode ? \"Salvar\" : \"Cadastrar\"}\r\n        </button>\r\n      </form>\r\n\r\n      <h3 className=\"mb-4\">Lista de Professores</h3>\r\n      <div className=\"row\">\r\n        {professores.map((professor) => (\r\n          <div key={professor.ID} className=\"col-md-4\">\r\n            <div className=\"card mb-4 border-0 shadow\">\r\n              <div className=\"card-body\">\r\n                <h5 className=\"card-title text-primary\">{professor.Nome}</h5>\r\n                <p className=\"card-text\">\r\n                  <strong>Email:</strong> {professor.Email}\r\n                </p>\r\n                <p className=\"card-text\">\r\n                  <strong>CPF:</strong> {professor.CPF}\r\n                </p>\r\n              </div>\r\n              <button\r\n                onClick={() => handleEdit(professor.ID)}\r\n                className=\"btn btn-warning mt-2\"\r\n              >\r\n                Editar\r\n              </button>\r\n              <button\r\n                onClick={() => handleDelete(professor.ID)}\r\n                className=\"btn btn-danger mt-2\"\r\n              >\r\n                Remover\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Professores;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Turmas() {\r\n  const [turmas, setTurmas] = useState([]);\r\n  const [professores, setProfessores] = useState([]); // Estado para armazenar os professores\r\n  const [novaTurma, setNovaTurma] = useState({ nome: '', semestre: '', ano: '', professorID: '' });\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [editingTurmaId, setEditingTurmaId] = useState(null);\r\n  const [errors, setErrors] = useState({}); // Estado para armazenar erros de validação\r\n\r\n  useEffect(() => {\r\n    axios.get('https://cadastro-escola-production.up.railway.app/turmas')\r\n      .then(response => setTurmas(response.data))\r\n      .catch(error => console.log(error));\r\n\r\n    axios.get('https://cadastro-escola-production.up.railway.app/professores') // Busca os professores\r\n      .then(response => setProfessores(response.data))\r\n      .catch(error => console.log(error));\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    if (name === 'semestre' && !/^\\d*$/.test(value)) {\r\n      return; // Impede entrada de não números no campo semestre\r\n    }\r\n\r\n    setNovaTurma({ ...novaTurma, [name]: value });\r\n  };\r\n\r\n  const validateForm = () => {\r\n    let formErrors = {};\r\n\r\n    if (!novaTurma.nome) formErrors.nome = \"O nome da turma é obrigatório\";\r\n    if (!novaTurma.semestre) formErrors.semestre = \"O semestre é obrigatório\";\r\n    if (!novaTurma.ano) formErrors.ano = \"O ano é obrigatório\";\r\n    if (!novaTurma.professorID) formErrors.professorID = \"O professor é obrigatório\";\r\n\r\n    setErrors(formErrors);\r\n\r\n    return Object.keys(formErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!validateForm()) return; // Impede o envio se o formulário for inválido\r\n\r\n    const turmaData = {\r\n      nome: novaTurma.nome,\r\n      semestre: novaTurma.semestre,\r\n      ano: parseInt(novaTurma.ano, 10),\r\n      professorID: parseInt(novaTurma.professorID, 10)\r\n    };\r\n\r\n    axios.post('https://cadastro-escola-production.up.railway.app/turmas', turmaData)\r\n      .then(response => {\r\n        setTurmas([...turmas, response.data]);\r\n        setNovaTurma({ nome: '', semestre: '', ano: '', professorID: '' });\r\n      })\r\n      .catch(error => console.log(error));\r\n  };\r\n\r\n  const handleSave = () => {\r\n    if (!validateForm()) return; // Impede o envio se o formulário for inválido\r\n\r\n    const turmaData = {\r\n      nome: novaTurma.nome,\r\n      semestre: novaTurma.semestre,\r\n      ano: parseInt(novaTurma.ano, 10),\r\n      professorID: parseInt(novaTurma.professorID, 10)\r\n    };\r\n\r\n    axios.put(`https://cadastro-escola-production.up.railway.app/turmas/${editingTurmaId}`, turmaData)\r\n      .then(response => {\r\n        setTurmas(\r\n          turmas.map(turma =>\r\n            turma.ID === editingTurmaId ? response.data : turma\r\n          )\r\n        );\r\n        setNovaTurma({ nome: '', semestre: '', ano: '', professorID: '' });\r\n        setEditingTurmaId(null);\r\n        setEditMode(false);\r\n      })\r\n      .catch(error => console.log(error));\r\n  };\r\n\r\n  const handleEdit = (id) => {\r\n    const turma = turmas.find(t => t.ID === id);\r\n    setNovaTurma({\r\n      nome: turma.Nome,\r\n      semestre: turma.Semestre,\r\n      ano: turma.Ano.toString(),\r\n      professorID: turma.ProfessorID.toString()\r\n    });\r\n    setEditingTurmaId(id);\r\n    setEditMode(true);\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    if (window.confirm(\"Você tem certeza que deseja remover esta turma?\")) {\r\n      axios.delete(`https://cadastro-escola-production.up.railway.app/turmas/${id}`)\r\n        .then(() => {\r\n          setTurmas(turmas.filter(turma => turma.ID !== id));\r\n        })\r\n        .catch(error => console.log(error));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"jumbotron bg-primary text-white p-5 rounded-lg shadow-sm mb-4\">\r\n        <h2 className=\"display-4\">Gerenciamento de Turmas</h2>\r\n        <p className=\"lead\">\r\n          Cadastre novas turmas e visualize a lista completa das turmas\r\n          disponíveis.\r\n        </p>\r\n      </div>\r\n\r\n      <form\r\n        onSubmit={handleSubmit}\r\n        className=\"mb-4 p-4 bg-light rounded-lg shadow\"\r\n      >\r\n        <h3 className=\"mb-3\">\r\n          {editMode ? \"Editar Turma\" : \"Cadastrar Nova Turma\"}\r\n        </h3>\r\n\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"nome\" className=\"form-label\">\r\n            Nome da Turma\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className={`form-control ${errors.nome ? \"is-invalid\" : \"\"}`}\r\n            name=\"nome\"\r\n            id=\"nome\"\r\n            placeholder=\"Nome da Turma\"\r\n            value={novaTurma.nome}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n          {errors.nome && <div className=\"invalid-feedback\">{errors.nome}</div>}\r\n        </div>\r\n\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"semestre\" className=\"form-label\">\r\n            Semestre\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className={`form-control ${errors.semestre ? \"is-invalid\" : \"\"}`}\r\n            name=\"semestre\"\r\n            id=\"semestre\"\r\n            placeholder=\"Semestre\"\r\n            value={novaTurma.semestre}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n          {errors.semestre && (\r\n            <div className=\"invalid-feedback\">{errors.semestre}</div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"ano\" className=\"form-label\">\r\n            Ano\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            className={`form-control ${errors.ano ? \"is-invalid\" : \"\"}`}\r\n            name=\"ano\"\r\n            id=\"ano\"\r\n            placeholder=\"Ano\"\r\n            value={novaTurma.ano}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n          {errors.ano && <div className=\"invalid-feedback\">{errors.ano}</div>}\r\n        </div>\r\n\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"professorID\" className=\"form-label\">\r\n            Professor\r\n          </label>\r\n          <select\r\n            className={`form-control ${errors.professorID ? \"is-invalid\" : \"\"}`}\r\n            name=\"professorID\"\r\n            id=\"professorID\"\r\n            value={novaTurma.professorID}\r\n            onChange={handleChange}\r\n            required\r\n          >\r\n            <option value=\"\">Selecione um Professor</option>\r\n            {professores.map((professor) => (\r\n              <option key={professor.ID} value={professor.ID}>\r\n                {professor.Nome}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          {errors.professorID && (\r\n            <div className=\"invalid-feedback\">{errors.professorID}</div>\r\n          )}\r\n        </div>\r\n\r\n        <button\r\n          type=\"button\"\r\n          className={`btn ${editMode ? \"btn-warning\" : \"btn-success\"} w-100`}\r\n          onClick={editMode ? handleSave : handleSubmit}\r\n        >\r\n          {editMode ? \"Salvar\" : \"Cadastrar\"}\r\n        </button>\r\n      </form>\r\n\r\n      <h3 className=\"mb-4\">Lista de Turmas</h3>\r\n      <div className=\"row\">\r\n        {turmas.map((turma) => (\r\n          <div key={turma.ID} className=\"col-md-4\">\r\n            <div className=\"card mb-4 border-0 shadow\">\r\n              <div className=\"card-body\">\r\n                <h5 className=\"card-title text-primary\">{turma.Nome}</h5>\r\n                <p className=\"card-text\">\r\n                  <strong>Semestre:</strong> {turma.Semestre}\r\n                </p>\r\n                <p className=\"card-text\">\r\n                  <strong>Ano:</strong> {turma.Ano}\r\n                </p>\r\n                <p className=\"card-text\">\r\n                  <strong>Professor:</strong>{\" \"}\r\n                  {professores.find((prof) => prof.ID === turma.ProfessorID)\r\n                    ?.Nome || turma.ProfessorID}\r\n                </p>\r\n              </div>\r\n              <button\r\n                onClick={() => handleEdit(turma.ID)}\r\n                className=\"btn btn-warning mt-2\"\r\n              >\r\n                Editar\r\n              </button>\r\n              <button\r\n                onClick={() => handleDelete(turma.ID)}\r\n                className=\"btn btn-danger mt-2\"\r\n              >\r\n                Remover\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Turmas;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Alunos() {\r\n  const [alunos, setAlunos] = useState([]);\r\n  const [novoAluno, setNovoAluno] = useState({ nome: '', matricula: '', turma: '' });\r\n  const [turmas, setTurmas] = useState([]);\r\n  const [errors, setErrors] = useState({});\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [editingAlunoId, setEditingAlunoId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    axios.get('https://cadastro-escola-production.up.railway.app/alunos')\r\n      .then(response => setAlunos(response.data))\r\n      .catch(error => console.log(error));\r\n\r\n    axios.get('https://cadastro-escola-production.up.railway.app/turmas')\r\n      .then(response => setTurmas(response.data))\r\n      .catch(error => console.log(error));\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    setNovoAluno({ ...novoAluno, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleTurmaChange = (e) => {\r\n    setNovoAluno({ ...novoAluno, turma: parseInt(e.target.value, 10) });\r\n  };\r\n\r\n  const validate = () => {\r\n    let tempErrors = {};\r\n    let isValid = true;\r\n\r\n    if (!novoAluno.nome) {\r\n      tempErrors[\"nome\"] = \"O nome é obrigatório.\";\r\n      isValid = false;\r\n    }\r\n    if (!novoAluno.matricula) {\r\n      tempErrors[\"matricula\"] = \"A matrícula é obrigatória.\";\r\n      isValid = false;\r\n    } else if (!/^\\d+$/.test(novoAluno.matricula)) {\r\n      tempErrors[\"matricula\"] = \"A matrícula deve conter apenas números.\";\r\n      isValid = false;\r\n    }\r\n    if (!novoAluno.turma) {\r\n      tempErrors[\"turma\"] = \"A turma é obrigatória.\";\r\n      isValid = false;\r\n    }\r\n\r\n    setErrors(tempErrors);\r\n    return isValid;\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (validate()) {\r\n      axios.post('https://cadastro-escola-production.up.railway.app/alunos', novoAluno)\r\n        .then(response => {\r\n          setAlunos([...alunos, response.data]);\r\n          setNovoAluno({ nome: '', matricula: '', turma: '' });\r\n          setErrors({});\r\n          alert(\"Aluno cadastrado com sucesso!\");\r\n        })\r\n        .catch(error => console.log(error));\r\n    }\r\n  };\r\n\r\n  const handleSave = () => {\r\n    if (validate()) {\r\n      axios.put(`https://cadastro-escola-production.up.railway.app/alunos/${editingAlunoId}`, novoAluno)\r\n        .then((response) => {\r\n          setAlunos(alunos.map((aluno) =>\r\n            aluno.ID === editingAlunoId ? response.data : aluno\r\n          ));\r\n          setNovoAluno({ nome: '', matricula: '', turma: '' });\r\n          setEditingAlunoId(null);\r\n          setEditMode(false);\r\n          setErrors({});\r\n          alert(\"Dados do aluno atualizados com sucesso!\");\r\n        })\r\n        .catch(error => console.log(error));\r\n    }\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    if (window.confirm(\"Você tem certeza que deseja remover este aluno?\")) {\r\n      axios.delete(`https://cadastro-escola-production.up.railway.app/alunos/${id}`)\r\n        .then(() => {\r\n          setAlunos(alunos.filter(aluno => aluno.ID !== id));\r\n          alert(\"Aluno removido com sucesso!\");\r\n        })\r\n        .catch(error => console.log(error));\r\n    }\r\n  };\r\n\r\n  const handleEdit = (id) => {\r\n    const aluno = alunos.find(a => a.ID === id);\r\n    setNovoAluno({\r\n      nome: aluno.Nome,\r\n      matricula: aluno.Matricula,\r\n      turma: aluno.Turmas.length > 0 ? aluno.Turmas[0].ID : ''\r\n    });\r\n    setEditingAlunoId(id);\r\n    setEditMode(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"jumbotron bg-primary text-white p-5 rounded-lg shadow-sm mb-4\">\r\n        <h2 className=\"display-4\">Gerenciamento de Alunos</h2>\r\n        <p className=\"lead\">Cadastre novos alunos e visualize a lista completa dos alunos cadastrados.</p>\r\n      </div>\r\n\r\n      <form className=\"mb-4 p-4 bg-light rounded-lg shadow\" noValidate>\r\n        <h3 className=\"mb-3\">{editMode ? \"Editar Aluno\" : \"Cadastrar Novo Aluno\"}</h3>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"nome\" className=\"form-label\">Nome do Aluno</label>\r\n          <input\r\n            type=\"text\"\r\n            className={`form-control ${errors.nome ? \"is-invalid\" : \"\"}`}\r\n            name=\"nome\"\r\n            id=\"nome\"\r\n            placeholder=\"Nome do Aluno\"\r\n            value={novoAluno.nome}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n          {errors.nome && <div className=\"invalid-feedback\">{errors.nome}</div>}\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"matricula\" className=\"form-label\">Matrícula</label>\r\n          <input\r\n            type=\"text\"\r\n            className={`form-control ${errors.matricula ? \"is-invalid\" : \"\"}`}\r\n            name=\"matricula\"\r\n            id=\"matricula\"\r\n            placeholder=\"Matrícula\"\r\n            value={novoAluno.matricula}\r\n            onChange={handleChange}\r\n            required\r\n            pattern=\"\\d*\"\r\n          />\r\n          {errors.matricula && <div className=\"invalid-feedback\">{errors.matricula}</div>}\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"turma\" className=\"form-label\">Turma</label>\r\n          <select\r\n            className={`form-control ${errors.turma ? \"is-invalid\" : \"\"}`}\r\n            name=\"turma\"\r\n            id=\"turma\"\r\n            value={novoAluno.turma}\r\n            onChange={handleTurmaChange}\r\n            required\r\n          >\r\n            <option value=\"\">Selecione uma Turma</option>\r\n            {turmas.map(turma => (\r\n              <option key={turma.ID} value={turma.ID}>\r\n                {turma.Nome} - {turma.Semestre}/{turma.Ano}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          {errors.turma && <div className=\"invalid-feedback\">{errors.turma}</div>}\r\n        </div>\r\n        <button\r\n          type=\"button\"\r\n          className={`btn ${editMode ? \"btn-warning\" : \"btn-success\"} w-100`}\r\n          onClick={editMode ? handleSave : handleSubmit}\r\n        >\r\n          {editMode ? \"Salvar\" : \"Cadastrar\"}\r\n        </button>\r\n      </form>\r\n\r\n      <h3 className=\"mb-4\">Lista de Alunos</h3>\r\n      <div className=\"row\">\r\n        {alunos.map(aluno => (\r\n          <div key={aluno.ID} className=\"col-md-4\">\r\n            <div className=\"card mb-4 border-0 shadow\">\r\n              <div className=\"card-body\">\r\n                <h5 className=\"card-title text-primary\">{aluno.Nome}</h5>\r\n                <p className=\"card-text\"><strong>Matrícula:</strong> {aluno.Matricula}</p>\r\n                <p className=\"card-text\"><strong>Turma:</strong> {aluno.Turmas.length > 0 ? `${aluno.Turmas[0].Nome} - ${aluno.Turmas[0].Semestre}/${aluno.Turmas[0].Ano}` : \"Nenhuma turma atribuída\"}</p>\r\n              </div>\r\n              <button onClick={() => handleEdit(aluno.ID)} className=\"btn btn-warning mt-2\">Editar</button>\r\n              <button onClick={() => handleDelete(aluno.ID)} className=\"btn btn-danger mt-2\">Remover</button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Alunos;","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction Atividades() {\r\n  const [atividades, setAtividades] = useState([]);\r\n  const [novaAtividade, setNovaAtividade] = useState({\r\n    nome: \"\",\r\n    valor: \"\",\r\n    data: \"\",\r\n    turmaID: \"\",\r\n  });\r\n  const [turmas, setTurmas] = useState([]);\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [editingAtividadeId, setEditingAtividadeId] = useState(null);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"https://cadastro-escola-production.up.railway.app/atividades\")\r\n      .then((response) => setAtividades(response.data))\r\n      .catch((error) => console.log(error));\r\n\r\n    axios\r\n      .get(\"https://cadastro-escola-production.up.railway.app/turmas\")\r\n      .then((response) => setTurmas(response.data))\r\n      .catch((error) => console.log(error));\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    setNovaAtividade({ ...novaAtividade, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const validateForm = () => {\r\n    let errors = {};\r\n    let isValid = true;\r\n\r\n    if (!novaAtividade.nome) {\r\n      errors.nome = \"O nome da atividade é obrigatório.\";\r\n      isValid = false;\r\n    }\r\n\r\n    if (!novaAtividade.valor) {\r\n      errors.valor = \"O valor da atividade é obrigatório.\";\r\n      isValid = false;\r\n    } else if (isNaN(parseFloat(novaAtividade.valor))) {\r\n      errors.valor = \"O valor da atividade deve ser um número.\";\r\n      isValid = false;\r\n    }\r\n\r\n    if (!novaAtividade.data) {\r\n      errors.data = \"A data da atividade é obrigatória.\";\r\n      isValid = false;\r\n    }\r\n\r\n    if (!novaAtividade.turmaID) {\r\n      errors.turmaID = \"A turma é obrigatória.\";\r\n      isValid = false;\r\n    }\r\n\r\n    setErrors(errors);\r\n    return isValid;\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!validateForm()) return;\r\n\r\n    const atividadeData = {\r\n      nome: novaAtividade.nome,\r\n      valor: parseFloat(novaAtividade.valor),\r\n      data: novaAtividade.data,\r\n      turmaID: parseInt(novaAtividade.turmaID, 10),\r\n    };\r\n\r\n    if (editMode) {\r\n      axios\r\n        .put(`https://cadastro-escola-production.up.railway.app/atividades/${editingAtividadeId}`, atividadeData)\r\n        .then((response) => {\r\n          setAtividades(\r\n            atividades.map((atividade) =>\r\n              atividade.ID === editingAtividadeId ? response.data : atividade\r\n            )\r\n          );\r\n          setNovaAtividade({ nome: \"\", valor: \"\", data: \"\", turmaID: \"\" });\r\n          setEditMode(false);\r\n          setEditingAtividadeId(null);\r\n          setErrors({});\r\n        })\r\n        .catch((error) => console.log(error));\r\n    } else {\r\n      axios\r\n        .post(\"https://cadastro-escola-production.up.railway.app/atividades\", atividadeData)\r\n        .then((response) => {\r\n          setAtividades([...atividades, response.data]);\r\n          setNovaAtividade({ nome: \"\", valor: \"\", data: \"\", turmaID: \"\" });\r\n          setErrors({});\r\n        })\r\n        .catch((error) => console.log(error));\r\n    }\r\n  };\r\n\r\n  const handleEdit = (id) => {\r\n    const atividade = atividades.find((a) => a.ID === id);\r\n\r\n    // Formatar a data no formato YYYY-MM-DD para o campo de data\r\n    const formattedDate = new Date(atividade.Data).toISOString().split(\"T\")[0];\r\n\r\n    setNovaAtividade({\r\n      nome: atividade.Nome,\r\n      valor: atividade.Valor.toString(),\r\n      data: formattedDate,\r\n      turmaID: atividade.TurmaID.toString(),\r\n    });\r\n    setEditingAtividadeId(id);\r\n    setEditMode(true);\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    if (window.confirm(\"Você tem certeza que deseja remover esta atividade?\")) {\r\n      axios\r\n        .delete(`https://cadastro-escola-production.up.railway.app/atividades/${id}`)\r\n        .then(() => {\r\n          setAtividades(atividades.filter((atividade) => atividade.ID !== id));\r\n        })\r\n        .catch((error) => console.log(error));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"jumbotron bg-primary text-white p-5 rounded-lg shadow-sm mb-4\">\r\n        <h2 className=\"display-4\">Gerenciamento de Atividades</h2>\r\n        <p className=\"lead\">\r\n          Cadastre novas atividades e visualize a lista completa das atividades\r\n          cadastradas.\r\n        </p>\r\n      </div>\r\n\r\n      <form\r\n        onSubmit={handleSubmit}\r\n        className=\"mb-4 p-4 bg-light rounded-lg shadow\"\r\n        noValidate\r\n      >\r\n        <h3 className=\"mb-3\">\r\n          {editMode ? \"Editar Atividade\" : \"Cadastrar Nova Atividade\"}\r\n        </h3>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"nome\" className=\"form-label\">\r\n            Nome da Atividade\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className={`form-control ${errors.nome ? \"is-invalid\" : \"\"}`}\r\n            name=\"nome\"\r\n            id=\"nome\"\r\n            placeholder=\"Nome da Atividade\"\r\n            value={novaAtividade.nome}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n          {errors.nome && <div className=\"invalid-feedback\">{errors.nome}</div>}\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"valor\" className=\"form-label\">\r\n            Valor\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            step=\"0.01\"\r\n            className={`form-control ${errors.valor ? \"is-invalid\" : \"\"}`}\r\n            name=\"valor\"\r\n            id=\"valor\"\r\n            placeholder=\"Valor da Atividade\"\r\n            value={novaAtividade.valor}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n          {errors.valor && (\r\n            <div className=\"invalid-feedback\">{errors.valor}</div>\r\n          )}\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"data\" className=\"form-label\">\r\n            Data\r\n          </label>\r\n          <input\r\n            type=\"date\"\r\n            className={`form-control ${errors.data ? \"is-invalid\" : \"\"}`}\r\n            name=\"data\"\r\n            id=\"data\"\r\n            value={novaAtividade.data}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n          {errors.data && <div className=\"invalid-feedback\">{errors.data}</div>}\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"turmaID\" className=\"form-label\">\r\n            Turma\r\n          </label>\r\n          <select\r\n            className={`form-control ${errors.turmaID ? \"is-invalid\" : \"\"}`}\r\n            name=\"turmaID\"\r\n            id=\"turmaID\"\r\n            value={novaAtividade.turmaID}\r\n            onChange={handleChange}\r\n            required\r\n          >\r\n            <option value=\"\" disabled>\r\n              Selecione uma Turma\r\n            </option>\r\n            {turmas.map((turma) => (\r\n              <option key={turma.ID} value={turma.ID}>\r\n                {turma.Nome} - {turma.Semestre}/{turma.Ano}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          {errors.turmaID && (\r\n            <div className=\"invalid-feedback\">{errors.turmaID}</div>\r\n          )}\r\n        </div>\r\n        <button\r\n          type=\"submit\"\r\n          className={`btn ${editMode ? \"btn-warning\" : \"btn-success\"} w-100`}\r\n        >\r\n          {editMode ? \"Salvar\" : \"Cadastrar\"}\r\n        </button>\r\n      </form>\r\n\r\n      <h3 className=\"mb-3\">Lista de Atividades</h3>\r\n      <div className=\"row\">\r\n        {atividades.map((atividade) => (\r\n          <div key={atividade.ID} className=\"col-md-4\">\r\n            <div className=\"card mb-4 border-0 shadow\">\r\n              <div className=\"card-body\">\r\n                <h5 className=\"card-title text-primary\">{atividade.Nome}</h5>\r\n                <p className=\"card-text\">\r\n                  <strong>Valor:</strong> {atividade.Valor} pontos\r\n                </p>\r\n                <p className=\"card-text\">\r\n                  <strong>Data:</strong>{\" \"}\r\n                  {new Date(atividade.Data).toLocaleDateString()}\r\n                </p>\r\n                <p className=\"card-text\">\r\n                  <strong>Turma:</strong>{\" \"}\r\n                  {atividade.Turma\r\n                    ? `${atividade.Turma.Nome} - ${atividade.Turma.Semestre}/${atividade.Turma.Ano}`\r\n                    : \"Sem Turma\"}\r\n                </p>\r\n              </div>\r\n              <button\r\n                onClick={() => handleEdit(atividade.ID)}\r\n                className=\"btn btn-warning mt-2\"\r\n              >\r\n                Editar\r\n              </button>\r\n              <button\r\n                onClick={() => handleDelete(atividade.ID)}\r\n                className=\"btn btn-danger mt-2\"\r\n              >\r\n                Remover\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Atividades;","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction Notas() {\r\n  const [notas, setNotas] = useState([]);\r\n  const [turmas, setTurmas] = useState([]);\r\n  const [atividades, setAtividades] = useState([]);\r\n  const [alunos, setAlunos] = useState([]);\r\n  const [notaInput, setNotaInput] = useState({\r\n    valor: \"\",\r\n    alunoID: \"\",\r\n    atividadeID: \"\",\r\n  });\r\n  const [selectedTurma, setSelectedTurma] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [editingNotaId, setEditingNotaId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"https://cadastro-escola-production.up.railway.app/notas\")\r\n      .then((response) => setNotas(response.data))\r\n      .catch((error) => console.log(\"Erro ao buscar notas:\", error));\r\n\r\n    axios\r\n      .get(\"https://cadastro-escola-production.up.railway.app/turmas\")\r\n      .then((response) => setTurmas(response.data))\r\n      .catch((error) => console.log(error));\r\n  }, []);\r\n\r\n  const handleTurmaChange = (e) => {\r\n    const turmaID = e.target.value;\r\n    setSelectedTurma(turmaID);\r\n\r\n    axios\r\n      .get(`https://cadastro-escola-production.up.railway.app/atividades?turma_id=${turmaID}`)\r\n      .then((response) => setAtividades(response.data))\r\n      .catch((error) => console.log(error));\r\n\r\n    axios\r\n      .get(`https://cadastro-escola-production.up.railway.app/alunos?turma_id=${turmaID}`)\r\n      .then((response) => setAlunos(response.data))\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n  \r\n    if (name === 'valor') {\r\n      setNotaInput({ ...notaInput, [name]: parseFloat(value) });\r\n    } else if (name === 'alunoID' || name === 'atividadeID') {\r\n      setNotaInput({ ...notaInput, [name]: parseInt(value, 10) });\r\n    } else {\r\n      setNotaInput({ ...notaInput, [name]: value });\r\n    }\r\n  };\r\n\r\n  const validateForm = () => {\r\n    let errors = [];\r\n    \r\n    if (!selectedTurma) {\r\n      errors.push(\"A turma é obrigatória.\");\r\n    }\r\n    if (!notaInput.atividadeID) {\r\n      errors.push(\"A atividade é obrigatória.\");\r\n    }\r\n    if (!notaInput.alunoID) {\r\n      errors.push(\"O aluno é obrigatório.\");\r\n    }\r\n    if (!notaInput.valor) {\r\n      errors.push(\"A nota é obrigatória.\");\r\n    } else if (isNaN(notaInput.valor)) {\r\n      errors.push(\"A nota deve ser um número.\");\r\n    }\r\n\r\n    if (errors.length > 0) {\r\n      setErrorMessage(errors.join(\" \"));\r\n      return false;\r\n    }\r\n    \r\n    setErrorMessage(\"\");\r\n    return true;\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!validateForm()) return;\r\n\r\n    if (editMode) {\r\n      axios\r\n        .put(`https://cadastro-escola-production.up.railway.app/notas/${editingNotaId}`, { valor: notaInput.valor })\r\n        .then((response) => {\r\n          setNotas(\r\n            notas.map((nota) => (nota.ID === editingNotaId ? response.data : nota))\r\n          );\r\n          setNotaInput({ valor: \"\", alunoID: \"\", atividadeID: \"\" });\r\n          setEditMode(false);\r\n          setEditingNotaId(null);\r\n        })\r\n        .catch((error) => {\r\n          if (\r\n            error.response &&\r\n            error.response.data &&\r\n            error.response.data.error\r\n          ) {\r\n            setErrorMessage(error.response.data.error);\r\n          } else {\r\n            setErrorMessage(\"Ocorreu um erro ao editar a nota.\");\r\n          }\r\n        });\r\n    } else {\r\n      axios\r\n        .post(\"https://cadastro-escola-production.up.railway.app/notas\", notaInput)\r\n        .then((response) => {\r\n          setNotas([...notas, response.data]);\r\n          setNotaInput({ valor: \"\", alunoID: \"\", atividadeID: \"\" });\r\n          setErrorMessage(\"\");\r\n        })\r\n        .catch((error) => {\r\n          if (\r\n            error.response &&\r\n            error.response.data &&\r\n            error.response.data.error\r\n          ) {\r\n            setErrorMessage(error.response.data.error);\r\n          } else {\r\n            setErrorMessage(\"Ocorreu um erro ao cadastrar a nota.\");\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleEdit = (id) => {\r\n    const nota = notas.find((n) => n.ID === id);\r\n  \r\n    const turmaRelacionada = turmas.find((turma) => turma.ID === nota.Atividade.TurmaID);\r\n    setSelectedTurma(turmaRelacionada.ID);\r\n  \r\n    axios\r\n      .get(`https://cadastro-escola-production.up.railway.app/atividades?turma_id=${turmaRelacionada.ID}`)\r\n      .then((response) => {\r\n        setAtividades(response.data);\r\n        setNotaInput({\r\n          valor: nota.Valor.toString(),\r\n          alunoID: nota.AlunoID.toString(),\r\n          atividadeID: nota.AtividadeID.toString(),\r\n        });\r\n      })\r\n      .catch((error) => console.log(error));\r\n  \r\n    axios\r\n      .get(`https://cadastro-escola-production.up.railway.app/alunos?turma_id=${turmaRelacionada.ID}`)\r\n      .then((response) => {\r\n        setAlunos(response.data);\r\n        setEditingNotaId(id);\r\n        setEditMode(true);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    if (window.confirm(\"Você tem certeza que deseja remover esta nota?\")) {\r\n      axios\r\n        .delete(`https://cadastro-escola-production.up.railway.app/notas/${id}`)\r\n        .then(() => {\r\n          setNotas(notas.filter((nota) => nota.ID !== id));\r\n        })\r\n        .catch((error) => {\r\n          setErrorMessage(\"Ocorreu um erro ao remover a nota.\");\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"jumbotron bg-primary text-white p-5 rounded-lg shadow-sm mb-4\">\r\n        <h2 className=\"display-4\">Cadastro de Notas</h2>\r\n        <p className=\"lead\">Selecione uma turma, escolha uma atividade e atribua notas aos alunos.</p>\r\n      </div>\r\n\r\n      {errorMessage && (\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n          {errorMessage}\r\n        </div>\r\n      )}\r\n\r\n      <form onSubmit={handleSubmit} className=\"mb-4 p-4 bg-light rounded-lg shadow\" noValidate>\r\n        <h3 className=\"mb-3\">{editMode ? \"Editar Nota\" : \"Cadastrar Nova Nota\"}</h3>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"turma\" className=\"form-label\">Turma</label>\r\n          <select\r\n            className=\"form-control\"\r\n            name=\"turma\"\r\n            id=\"turma\"\r\n            value={selectedTurma}\r\n            onChange={handleTurmaChange}\r\n            required\r\n          >\r\n            <option value=\"\" disabled>Selecione uma Turma</option>\r\n            {turmas.map((turma) => (\r\n              <option key={turma.ID} value={turma.ID}>{turma.Nome} - {turma.Semestre}/{turma.Ano}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"atividadeID\" className=\"form-label\">Atividade</label>\r\n          <select\r\n            className=\"form-control\"\r\n            name=\"atividadeID\"\r\n            id=\"atividadeID\"\r\n            value={notaInput.atividadeID}\r\n            onChange={handleChange}\r\n            required\r\n          >\r\n            <option value=\"\" disabled>Selecione uma Atividade</option>\r\n            {atividades.map((atividade) => (\r\n              <option key={atividade.ID} value={atividade.ID}>{atividade.Nome} - Valor Máximo: {atividade.Valor} pontos</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"alunoID\" className=\"form-label\">Aluno</label>\r\n          <select\r\n            className=\"form-control\"\r\n            name=\"alunoID\"\r\n            id=\"alunoID\"\r\n            value={notaInput.alunoID}\r\n            onChange={handleChange}\r\n            required\r\n          >\r\n            <option value=\"\" disabled>Selecione um Aluno</option>\r\n            {alunos.map((aluno) => (\r\n              <option key={aluno.ID} value={aluno.ID}>{aluno.Nome} - Matrícula: {aluno.Matricula}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"valor\" className=\"form-label\">Nota</label>\r\n          <input\r\n            type=\"number\"\r\n            step=\"0.01\"\r\n            className=\"form-control\"\r\n            name=\"valor\"\r\n            id=\"valor\"\r\n            placeholder=\"Valor da Nota\"\r\n            value={notaInput.valor}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-success w-100\">\r\n          {editMode ? \"Salvar\" : \"Cadastrar\"}\r\n        </button>\r\n      </form>\r\n\r\n      <h3 className=\"mb-3\">Notas Cadastradas</h3>\r\n      <div className=\"row\">\r\n        {notas.map((nota) => (\r\n          <div key={nota.ID} className=\"col-md-4\">\r\n            <div className=\"card mb-4 shadow-sm border-0\">\r\n              <div className=\"card-body\">\r\n                <h5 className=\"card-title text-primary\">Aluno: {nota.Aluno.Nome}</h5>\r\n                <p className=\"card-text\"><strong>Nota:</strong> {nota.Valor}</p>\r\n                <p className=\"card-text\"><strong>Atividade:</strong> {nota.Atividade.Nome}</p>\r\n              </div>\r\n              <button onClick={() => handleEdit(nota.ID)} className=\"btn btn-warning mt-2\">Editar</button>\r\n              <button onClick={() => handleDelete(nota.ID)} className=\"btn btn-danger mt-2\">Remover</button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Notas;","import React from 'react';\nimport { BrowserRouter as Router, Route, Routes, Link } from 'react-router-dom';\nimport Professores from './pages/professores';\nimport Turmas from './pages/turmas';\nimport Alunos from './pages/alunos';\nimport Atividades from './pages/atividades';\nimport Notas from './pages/notas';\n\nfunction Home() {\n  return (\n    <div className=\"jumbotron bg-dark text-white p-5 rounded-lg shadow-sm text-center\">\n      <h1 className=\"display-4\">Bem-vindo ao Cadastro-Escola!</h1>\n      <p className=\"lead\">Gerencie professores, turmas, alunos, atividades e notas de forma simples e eficiente.</p>\n      <hr className=\"my-4\" style={{ borderColor: '#6c757d' }} />\n      <p className=\"mb-5\">Atalhos das funcionalidades abaixo para começar a usar o sistema:</p>\n      <div className=\"row text-center\">\n        <div className=\"col-md-4\">\n          <div className=\"card mb-4 h-100 border-primary shadow\">\n            <div className=\"card-body\">\n              <i className=\"bi bi-person-badge display-1 text-primary\"></i>\n              <h5 className=\"card-title mt-3\">Professores</h5>\n              <p className=\"card-text\">Cadastre e visualize os professores da escola.</p>\n              <Link to=\"/professores\" className=\"btn btn-primary btn-block\">Gerenciar Professores</Link>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-md-4\">\n          <div className=\"card mb-4 h-100 border-success shadow\">\n            <div className=\"card-body\">\n              <i className=\"bi bi-people display-1 text-success\"></i>\n              <h5 className=\"card-title mt-3\">Turmas</h5>\n              <p className=\"card-text\">Gerencie as turmas e atribua professores.</p>\n              <Link to=\"/turmas\" className=\"btn btn-success btn-block\">Gerenciar Turmas</Link>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-md-4\">\n          <div className=\"card mb-4 h-100 border-info shadow\">\n            <div className=\"card-body\">\n              <i className=\"bi bi-person display-1 text-info\"></i>\n              <h5 className=\"card-title mt-3\">Alunos</h5>\n              <p className=\"card-text\">Cadastre alunos e associe-os a turmas.</p>\n              <Link to=\"/alunos\" className=\"btn btn-info btn-block\">Gerenciar Alunos</Link>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-md-4\">\n          <div className=\"card mb-4 h-100 border-warning shadow\">\n            <div className=\"card-body\">\n              <i className=\"bi bi-calendar-event display-1 text-warning\"></i>\n              <h5 className=\"card-title mt-3\">Atividades</h5>\n              <p className=\"card-text\">Crie atividades para as turmas e defina os valores.</p>\n              <Link to=\"/atividades\" className=\"btn btn-warning btn-block\">Gerenciar Atividades</Link>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-md-4\">\n          <div className=\"card mb-4 h-100 border-danger shadow\">\n            <div className=\"card-body\">\n              <i className=\"bi bi-journal-check display-1 text-danger\"></i>\n              <h5 className=\"card-title mt-3\">Notas</h5>\n              <p className=\"card-text\">Registre as notas dos alunos nas atividades.</p>\n              <Link to=\"/notas\" className=\"btn btn-danger btn-block\">Gerenciar Notas</Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\" style={{ backgroundColor: '#f8f9fa' }}>\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark shadow-sm\">\n          <div className=\"container-fluid\">\n            <Link className=\"navbar-brand\" to=\"/\">Cadastro-Escola</Link>\n            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n              <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n              <ul className=\"navbar-nav\">\n                <li className=\"nav-item\">\n                  <Link className=\"nav-link\" to=\"/professores\"><i className=\"bi bi-person-badge\"></i> Professores</Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link className=\"nav-link\" to=\"/turmas\"><i className=\"bi bi-people\"></i> Turmas</Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link className=\"nav-link\" to=\"/alunos\"><i className=\"bi bi-person\"></i> Alunos</Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link className=\"nav-link\" to=\"/atividades\"><i className=\"bi bi-calendar-event\"></i> Atividades</Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link className=\"nav-link\" to=\"/notas\"><i className=\"bi bi-journal-check\"></i> Notas</Link>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </nav>\n\n        <div className=\"container mt-4\">\n          <Routes>\n            <Route path=\"/professores\" element={<Professores />} />\n            <Route path=\"/turmas\" element={<Turmas />} />\n            <Route path=\"/alunos\" element={<Alunos />} />\n            <Route path=\"/atividades\" element={<Atividades />} />\n            <Route path=\"/notas\" element={<Notas />} />\n            <Route path=\"/\" element={<Home />} />\n          </Routes>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}